{"version":3,"sources":["../../src/utils.js"],"names":["MAX_LATITUDE","createDeckInstance","map","overlay","deck","props","userData","_googleMap","destroyDeckInstance","eventListeners","click","dblclick","mousemove","mouseout","Deck","style","interleaved","pointerEvents","parent","getContainer","initialViewState","longitude","latitude","zoom","controller","_eventListeners","eventType","addListener","evt","handleMouseEvent","container","document","createElement","position","Object","assign","getPanes","overlayLayer","appendChild","getMap","getDiv","remove","finalize","getViewPropsFromOverlay","getMapSize","width","height","projection","getProjection","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","topRight","fromLatLngToDivPixel","bottomLeft","centerLngLat","pixelToLngLat","centerH","google","maps","LatLng","centerContainerPx","fromLatLngToContainerPixel","centerDivPx","leftOffset","Math","round","x","topOffset","y","topLngLat","bottomLngLat","abs","center","centerPx","delta","Vector2","sub","bearing","verticalAngle","PI","heading","getHeading","getZoom","scale","viewDiagonal","len","mapDiagonal","log2","left","top","pitch","getTilt","getViewPropsFromCoordinateTransformer","transformer","getCameraParams","tilt","fovy","aspect","near","far","projectionMatrix","Matrix4","perspective","focalDistance","viewState","altitude","lat","lng","repeat","firstChild","offsetWidth","offsetHeight","point","Point","latLng","fromContainerPixelToLatLng","getEventPixel","event","pixel","getViewports","project","type","mockEvent","offsetCenter","srcEvent","_lastPointerDownInfo","pickObject","radius","pickingRadius","tapCount","_onEvent","_onPointerMove"],"mappings":";;;;;;;;;;;;;;AACA;;AACA;;;;;;AAGA,IAAMA,YAAY,GAAG,QAArB;;AAQO,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuD;AAC5D,MAAID,IAAJ,EAAU;AACR,QAAIA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,UAApB,KAAmCL,GAAvC,EAA4C;AAC1C,aAAOE,IAAP;AACD;;AAEDI,IAAAA,mBAAmB,CAACJ,IAAD,CAAnB;AACD;;AAED,MAAMK,cAAc,GAAG;AACrBC,IAAAA,KAAK,EAAE,IADc;AAErBC,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,SAAS,EAAE,IAHU;AAIrBC,IAAAA,QAAQ,EAAE;AAJW,GAAvB;AAOAT,EAAAA,IAAI,GAAG,IAAIU,UAAJ,iCACFT,KADE;AAELU,IAAAA,KAAK,EAAEV,KAAK,CAACW,WAAN,GAAoB,IAApB,GAA2B;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAF7B;AAGLC,IAAAA,MAAM,EAAEC,YAAY,CAAChB,OAAD,EAAUE,KAAK,CAACU,KAAhB,CAHf;AAILK,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAE,CADK;AAEhBC,MAAAA,QAAQ,EAAE,CAFM;AAGhBC,MAAAA,IAAI,EAAE;AAHU,KAJb;AASLC,IAAAA,UAAU,EAAE,KATP;AAULlB,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAEL,GADJ;AAERuB,MAAAA,eAAe,EAAEhB;AAFT;AAVL,KAAP;;AAhB4D,6BAiCjDiB,SAjCiD;AAkC1DjB,IAAAA,cAAc,CAACiB,SAAD,CAAd,GAA4BxB,GAAG,CAACyB,WAAJ,CAAgBD,SAAhB,EAA2B,UAAAE,GAAG;AAAA,aACxDC,gBAAgB,CAACzB,IAAD,EAAOsB,SAAP,EAAkBE,GAAlB,CADwC;AAAA,KAA9B,CAA5B;AAlC0D;;AAiC5D,OAAK,IAAMF,SAAX,IAAwBjB,cAAxB,EAAwC;AAAA,UAA7BiB,SAA6B;AAIvC;;AAED,SAAOtB,IAAP;AACD;;AAGD,SAASe,YAAT,CAAsBhB,OAAtB,EAA+BY,KAA/B,EAAsC;AACpC,MAAMe,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,EAAAA,SAAS,CAACf,KAAV,CAAgBkB,QAAhB,GAA2B,UAA3B;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcL,SAAS,CAACf,KAAxB,EAA+BA,KAA/B;;AAIA,MAAIZ,OAAO,CAACiC,QAAZ,EAAsB;AACpBjC,IAAAA,OAAO,CAACiC,QAAR,GAAmBC,YAAnB,CAAgCC,WAAhC,CAA4CR,SAA5C;AACD,GAFD,MAEO;AACL3B,IAAAA,OAAO,CAACoC,MAAR,GAAiBC,MAAjB,GAA0BF,WAA1B,CAAsCR,SAAtC;AACD;;AACD,SAAOA,SAAP;AACD;;AAMM,SAAStB,mBAAT,CAA6BJ,IAA7B,EAAmC;AACxC,MAAwBK,cAAxB,GAA0CL,IAAI,CAACC,KAAL,CAAWC,QAArD,CAAOmB,eAAP;;AAGA,OAAK,IAAMC,SAAX,IAAwBjB,cAAxB,EAAwC;AACtCA,IAAAA,cAAc,CAACiB,SAAD,CAAd,CAA0Be,MAA1B;AACD;;AAEDrC,EAAAA,IAAI,CAACsC,QAAL;AACD;;AAQM,SAASC,uBAAT,CAAiCzC,GAAjC,EAAsCC,OAAtC,EAA+C;AACpD,oBAAwByC,UAAU,CAAC1C,GAAD,CAAlC;AAAA,MAAO2C,KAAP,eAAOA,KAAP;AAAA,MAAcC,MAAd,eAAcA,MAAd;;AAKA,MAAMC,UAAU,GAAG5C,OAAO,CAAC6C,aAAR,EAAnB;AAEA,MAAMC,MAAM,GAAG/C,GAAG,CAACgD,SAAJ,EAAf;AACA,MAAMC,EAAE,GAAGF,MAAM,CAACG,YAAP,EAAX;AACA,MAAMC,EAAE,GAAGJ,MAAM,CAACK,YAAP,EAAX;AACA,MAAMC,QAAQ,GAAGR,UAAU,CAACS,oBAAX,CAAgCL,EAAhC,CAAjB;AACA,MAAMM,UAAU,GAAGV,UAAU,CAACS,oBAAX,CAAgCH,EAAhC,CAAnB;AAKA,MAAMK,YAAY,GAAGC,aAAa,CAACZ,UAAD,EAAaF,KAAK,GAAG,CAArB,EAAwBC,MAAM,GAAG,CAAjC,CAAlC;AACA,MAAMc,OAAO,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,CAAvB,EAA0BL,YAAY,CAAC,CAAD,CAAtC,CAAhB;AACA,MAAMM,iBAAiB,GAAGjB,UAAU,CAACkB,0BAAX,CAAsCL,OAAtC,CAA1B;AACA,MAAMM,WAAW,GAAGnB,UAAU,CAACS,oBAAX,CAAgCI,OAAhC,CAApB;AAEA,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACI,CAAZ,GAAgBN,iBAAiB,CAACM,CAA7C,CAAnB;AACA,MAAIC,SAAS,GAAGL,WAAW,CAACM,CAAZ,GAAgBR,iBAAiB,CAACQ,CAAlD;AAEA,MAAMC,SAAS,GAAGd,aAAa,CAACZ,UAAD,EAAaF,KAAK,GAAG,CAArB,EAAwB,CAAxB,CAA/B;AACA,MAAM6B,YAAY,GAAGf,aAAa,CAACZ,UAAD,EAAaF,KAAK,GAAG,CAArB,EAAwBC,MAAxB,CAAlC;AAGA,MAAIxB,QAAQ,GAAGoC,YAAY,CAAC,CAAD,CAA3B;AACA,MAAMrC,SAAS,GAAGqC,YAAY,CAAC,CAAD,CAA9B;;AAGA,MAAIU,IAAI,CAACO,GAAL,CAASrD,QAAT,IAAqBtB,YAAzB,EAAuC;AACrCsB,IAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAX,GAAetB,YAAf,GAA8B,CAACA,YAA1C;AACA,QAAM4E,MAAM,GAAG,IAAIf,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBzC,QAAvB,EAAiCD,SAAjC,CAAf;AACA,QAAMwD,QAAQ,GAAG9B,UAAU,CAACkB,0BAAX,CAAsCW,MAAtC,CAAjB;AACAL,IAAAA,SAAS,IAAIM,QAAQ,CAACL,CAAT,GAAa1B,MAAM,GAAG,CAAnC;AACD;;AACDyB,EAAAA,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWE,SAAX,CAAZ;AAGA,MAAMO,KAAK,GAAG,IAAIC,cAAJ,CAAYN,SAAZ,EAAuBO,GAAvB,CAA2BN,YAA3B,CAAd;AACA,MAAIO,OAAO,GAAI,MAAMH,KAAK,CAACI,aAAN,EAAP,GAAgCd,IAAI,CAACe,EAAnD;AACA,MAAIF,OAAO,GAAG,CAAd,EAAiBA,OAAO,IAAI,GAAX;AAGjB,MAAMG,OAAO,GAAGlF,GAAG,CAACmF,UAAJ,MAAoB,CAApC;AAEA,MAAI9D,IAAI,GAAGrB,GAAG,CAACoF,OAAJ,KAAgB,CAA3B;AACA,MAAIC,KAAJ;;AAEA,MAAIN,OAAO,KAAK,CAAhB,EAAmB;AAGjBM,IAAAA,KAAK,GAAGzC,MAAM,GAAG,CAACW,UAAU,CAACe,CAAX,GAAejB,QAAQ,CAACiB,CAAzB,IAA8B1B,MAAjC,GAA0C,CAAxD;AACD,GAJD,MAIO,IAAImC,OAAO,KAAKG,OAAhB,EAAyB;AAE9B,QAAMI,YAAY,GAAG,IAAIT,cAAJ,CAAY,CAACxB,QAAQ,CAACe,CAAV,EAAaf,QAAQ,CAACiB,CAAtB,CAAZ,EAClBQ,GADkB,CACd,CAACvB,UAAU,CAACa,CAAZ,EAAeb,UAAU,CAACe,CAA1B,CADc,EAElBiB,GAFkB,EAArB;AAGA,QAAMC,WAAW,GAAG,IAAIX,cAAJ,CAAY,CAAClC,KAAD,EAAQ,CAACC,MAAT,CAAZ,EAA8B2C,GAA9B,EAApB;AACAF,IAAAA,KAAK,GAAGG,WAAW,GAAGF,YAAY,GAAGE,WAAlB,GAAgC,CAAnD;AACD;;AAIDnE,EAAAA,IAAI,IAAI6C,IAAI,CAACuB,IAAL,CAAUJ,KAAK,IAAI,CAAnB,CAAR;AAEA,SAAO;AACL1C,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGL8C,IAAAA,IAAI,EAAEzB,UAHD;AAIL0B,IAAAA,GAAG,EAAEtB,SAJA;AAKLhD,IAAAA,IAAI,EAAJA,IALK;AAML0D,IAAAA,OAAO,EAAPA,OANK;AAOLa,IAAAA,KAAK,EAAE5F,GAAG,CAAC6F,OAAJ,EAPF;AAQLzE,IAAAA,QAAQ,EAARA,QARK;AASLD,IAAAA,SAAS,EAATA;AATK,GAAP;AAWD;;AASM,SAAS2E,qCAAT,CAA+C9F,GAA/C,EAAoD+F,WAApD,EAAiE;AACtE,qBAAwBrD,UAAU,CAAC1C,GAAD,CAAlC;AAAA,MAAO2C,KAAP,gBAAOA,KAAP;AAAA,MAAcC,MAAd,gBAAcA,MAAd;;AACA,8BAAsDmD,WAAW,CAACC,eAAZ,EAAtD;AAAA,MAAOtB,MAAP,yBAAOA,MAAP;AAAA,MAAwBK,OAAxB,yBAAeG,OAAf;AAAA,MAAuCU,KAAvC,yBAAiCK,IAAjC;AAAA,MAA8C5E,IAA9C,yBAA8CA,IAA9C;;AAGA,MAAM6E,IAAI,GAAG,EAAb;AACA,MAAMC,MAAM,GAAGvD,MAAM,GAAGD,KAAK,GAAGC,MAAX,GAAoB,CAAzC;AAGA,MAAMwD,IAAI,GAAG,IAAb;AACA,MAAMC,GAAG,GAAG,eAAZ;AAGA,MAAMC,gBAAgB,GAAG,IAAIC,cAAJ,GAAcC,WAAd,CAA0B;AACjDN,IAAAA,IAAI,EAAGA,IAAI,GAAGhC,IAAI,CAACe,EAAb,GAAmB,GADwB;AAEjDkB,IAAAA,MAAM,EAANA,MAFiD;AAGjDC,IAAAA,IAAI,EAAJA,IAHiD;AAIjDC,IAAAA,GAAG,EAAHA;AAJiD,GAA1B,CAAzB;AAMA,MAAMI,aAAa,GAAG,MAAMH,gBAAgB,CAAC,CAAD,CAA5C;AAEA,SAAO;AACL3D,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGL8D,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAEF,aADD;AAET1B,MAAAA,OAAO,EAAPA,OAFS;AAGT3D,MAAAA,QAAQ,EAAEsD,MAAM,CAACkC,GAAP,EAHD;AAITzF,MAAAA,SAAS,EAAEuD,MAAM,CAACmC,GAAP,EAJF;AAKTjB,MAAAA,KAAK,EAALA,KALS;AAMTU,MAAAA,gBAAgB,EAAhBA,gBANS;AAOTQ,MAAAA,MAAM,EAAE,IAPC;AAQTzF,MAAAA,IAAI,EAAEA,IAAI,GAAG;AARJ;AAHN,GAAP;AAcD;;AAED,SAASqB,UAAT,CAAoB1C,GAApB,EAAyB;AAGvB,MAAM4B,SAAS,GAAG5B,GAAG,CAACsC,MAAJ,GAAayE,UAA/B;AACA,SAAO;AACLpE,IAAAA,KAAK,EAAEf,SAAS,CAACoF,WADZ;AAELpE,IAAAA,MAAM,EAAEhB,SAAS,CAACqF;AAFb,GAAP;AAID;;AAED,SAASxD,aAAT,CAAuBZ,UAAvB,EAAmCuB,CAAnC,EAAsCE,CAAtC,EAAyC;AACvC,MAAM4C,KAAK,GAAG,IAAIvD,MAAM,CAACC,IAAP,CAAYuD,KAAhB,CAAsB/C,CAAtB,EAAyBE,CAAzB,CAAd;AACA,MAAM8C,MAAM,GAAGvE,UAAU,CAACwE,0BAAX,CAAsCH,KAAtC,CAAf;AACA,SAAO,CAACE,MAAM,CAACP,GAAP,EAAD,EAAeO,MAAM,CAACR,GAAP,EAAf,CAAP;AACD;;AAED,SAASU,aAAT,CAAuBC,KAAvB,EAA8BrH,IAA9B,EAAoC;AAClC,MAAIqH,KAAK,CAACC,KAAV,EAAiB;AACf,WAAOD,KAAK,CAACC,KAAb;AACD;;AAGD,MAAMN,KAAK,GAAGhH,IAAI,CAACuH,YAAL,GAAoB,CAApB,EAAuBC,OAAvB,CAA+B,CAACH,KAAK,CAACH,MAAN,CAAaP,GAAb,EAAD,EAAqBU,KAAK,CAACH,MAAN,CAAaR,GAAb,EAArB,CAA/B,CAAd;AACA,SAAO;AACLxC,IAAAA,CAAC,EAAE8C,KAAK,CAAC,CAAD,CADH;AAEL5C,IAAAA,CAAC,EAAE4C,KAAK,CAAC,CAAD;AAFH,GAAP;AAID;;AAGD,SAASvF,gBAAT,CAA0BzB,IAA1B,EAAgCyH,IAAhC,EAAsCJ,KAAtC,EAA6C;AAC3C,MAAMK,SAAS,GAAG;AAChBD,IAAAA,IAAI,EAAJA,IADgB;AAEhBE,IAAAA,YAAY,EAAEP,aAAa,CAACC,KAAD,EAAQrH,IAAR,CAFX;AAGhB4H,IAAAA,QAAQ,EAAEP;AAHM,GAAlB;;AAMA,UAAQI,IAAR;AACE,SAAK,OAAL;AAEEzH,MAAAA,IAAI,CAAC6H,oBAAL,GAA4B7H,IAAI,CAAC8H,UAAL,iCACvBJ,SAAS,CAACC,YADa;AAE1BI,QAAAA,MAAM,EAAE/H,IAAI,CAACC,KAAL,CAAW+H;AAFO,SAA5B;AAIAN,MAAAA,SAAS,CAACO,QAAV,GAAqB,CAArB;;AACAjI,MAAAA,IAAI,CAACkI,QAAL,CAAcR,SAAd;;AACA;;AAEF,SAAK,UAAL;AACEA,MAAAA,SAAS,CAACD,IAAV,GAAiB,OAAjB;AACAC,MAAAA,SAAS,CAACO,QAAV,GAAqB,CAArB;;AACAjI,MAAAA,IAAI,CAACkI,QAAL,CAAcR,SAAd;;AACA;;AAEF,SAAK,WAAL;AACEA,MAAAA,SAAS,CAACD,IAAV,GAAiB,aAAjB;;AACAzH,MAAAA,IAAI,CAACmI,cAAL,CAAoBT,SAApB;;AACA;;AAEF,SAAK,UAAL;AACEA,MAAAA,SAAS,CAACD,IAAV,GAAiB,cAAjB;;AACAzH,MAAAA,IAAI,CAACmI,cAAL,CAAoBT,SAApB;;AACA;;AAEF;AACE;AA5BJ;AA8BD","sourcesContent":["/* global google, document */\nimport {Deck} from '@deck.gl/core';\nimport {Matrix4, Vector2} from '@math.gl/core';\n\n// https://en.wikipedia.org/wiki/Web_Mercator_projection#Formulas\nconst MAX_LATITUDE = 85.05113;\n\n/**\n * Get a new deck instance\n * @param map (google.maps.Map) - The parent Map instance\n * @param overlay (google.maps.OverlayView) - A maps Overlay instance\n * @param [deck] (Deck) - a previously created instances\n */\nexport function createDeckInstance(map, overlay, deck, props) {\n  if (deck) {\n    if (deck.props.userData._googleMap === map) {\n      return deck;\n    }\n    // deck instance was created for a different map\n    destroyDeckInstance(deck);\n  }\n\n  const eventListeners = {\n    click: null,\n    dblclick: null,\n    mousemove: null,\n    mouseout: null\n  };\n\n  deck = new Deck({\n    ...props,\n    style: props.interleaved ? null : {pointerEvents: 'none'},\n    parent: getContainer(overlay, props.style),\n    initialViewState: {\n      longitude: 0,\n      latitude: 0,\n      zoom: 1\n    },\n    controller: false,\n    userData: {\n      _googleMap: map,\n      _eventListeners: eventListeners\n    }\n  });\n\n  // Register event listeners\n  for (const eventType in eventListeners) {\n    eventListeners[eventType] = map.addListener(eventType, evt =>\n      handleMouseEvent(deck, eventType, evt)\n    );\n  }\n\n  return deck;\n}\n\n// Create a container that will host the deck canvas and tooltip\nfunction getContainer(overlay, style) {\n  const container = document.createElement('div');\n  container.style.position = 'absolute';\n  Object.assign(container.style, style);\n\n  // The DOM structure has a different structure depending on whether\n  // the Google map is rendered as vector or raster\n  if (overlay.getPanes) {\n    overlay.getPanes().overlayLayer.appendChild(container);\n  } else {\n    overlay.getMap().getDiv().appendChild(container);\n  }\n  return container;\n}\n\n/**\n * Safely remove a deck instance\n * @param deck (Deck) - a previously created instances\n */\nexport function destroyDeckInstance(deck) {\n  const {_eventListeners: eventListeners} = deck.props.userData;\n\n  // Unregister event listeners\n  for (const eventType in eventListeners) {\n    eventListeners[eventType].remove();\n  }\n\n  deck.finalize();\n}\n\n/* eslint-disable max-statements */\n/**\n * Get the current view state\n * @param map (google.maps.Map) - The parent Map instance\n * @param overlay (google.maps.OverlayView) - A maps Overlay instance\n */\nexport function getViewPropsFromOverlay(map, overlay) {\n  const {width, height} = getMapSize(map);\n\n  // Canvas position relative to draggable map's container depends on\n  // overlayView's projection, not the map's. Have to use the center of the\n  // map for this, not the top left, for the same reason as above.\n  const projection = overlay.getProjection();\n\n  const bounds = map.getBounds();\n  const ne = bounds.getNorthEast();\n  const sw = bounds.getSouthWest();\n  const topRight = projection.fromLatLngToDivPixel(ne);\n  const bottomLeft = projection.fromLatLngToDivPixel(sw);\n\n  // google maps places overlays in a container anchored at the map center.\n  // the container CSS is manipulated during dragging.\n  // We need to update left/top of the deck canvas to match the base map.\n  const centerLngLat = pixelToLngLat(projection, width / 2, height / 2);\n  const centerH = new google.maps.LatLng(0, centerLngLat[0]);\n  const centerContainerPx = projection.fromLatLngToContainerPixel(centerH);\n  const centerDivPx = projection.fromLatLngToDivPixel(centerH);\n\n  const leftOffset = Math.round(centerDivPx.x - centerContainerPx.x);\n  let topOffset = centerDivPx.y - centerContainerPx.y;\n\n  const topLngLat = pixelToLngLat(projection, width / 2, 0);\n  const bottomLngLat = pixelToLngLat(projection, width / 2, height);\n\n  // Compute fractional center.\n  let latitude = centerLngLat[1];\n  const longitude = centerLngLat[0];\n\n  // Adjust vertical offset - limit latitude\n  if (Math.abs(latitude) > MAX_LATITUDE) {\n    latitude = latitude > 0 ? MAX_LATITUDE : -MAX_LATITUDE;\n    const center = new google.maps.LatLng(latitude, longitude);\n    const centerPx = projection.fromLatLngToContainerPixel(center);\n    topOffset += centerPx.y - height / 2;\n  }\n  topOffset = Math.round(topOffset);\n\n  // Compute fractional bearing\n  const delta = new Vector2(topLngLat).sub(bottomLngLat);\n  let bearing = (180 * delta.verticalAngle()) / Math.PI;\n  if (bearing < 0) bearing += 360;\n\n  // Maps sometimes returns undefined instead of 0\n  const heading = map.getHeading() || 0;\n\n  let zoom = map.getZoom() - 1;\n  let scale;\n\n  if (bearing === 0) {\n    // At full world view (always unrotated) simply compare height, as diagonal\n    // is incorrect due to multiple world copies\n    scale = height ? (bottomLeft.y - topRight.y) / height : 1;\n  } else if (bearing === heading) {\n    // Fractional zoom calculation only correct when bearing is not animating\n    const viewDiagonal = new Vector2([topRight.x, topRight.y])\n      .sub([bottomLeft.x, bottomLeft.y])\n      .len();\n    const mapDiagonal = new Vector2([width, -height]).len();\n    scale = mapDiagonal ? viewDiagonal / mapDiagonal : 1;\n  }\n\n  // When resizing aggressively, occasionally ne and sw are the same points\n  // See https://github.com/visgl/deck.gl/issues/4218\n  zoom += Math.log2(scale || 1);\n\n  return {\n    width,\n    height,\n    left: leftOffset,\n    top: topOffset,\n    zoom,\n    bearing,\n    pitch: map.getTilt(),\n    latitude,\n    longitude\n  };\n}\n\n/* eslint-enable max-statements */\n\n/**\n * Get the current view state\n * @param map (google.maps.Map) - The parent Map instance\n * @param transformer (google.maps.CoordinateTransformer) - A CoordinateTransformer instance\n */\nexport function getViewPropsFromCoordinateTransformer(map, transformer) {\n  const {width, height} = getMapSize(map);\n  const {center, heading: bearing, tilt: pitch, zoom} = transformer.getCameraParams();\n\n  // Match Google projection matrix\n  const fovy = 25;\n  const aspect = height ? width / height : 1;\n\n  // Match depth range (crucial for correct z-sorting)\n  const near = 0.75;\n  const far = 300000000000000;\n  // const far = Infinity;\n\n  const projectionMatrix = new Matrix4().perspective({\n    fovy: (fovy * Math.PI) / 180,\n    aspect,\n    near,\n    far\n  });\n  const focalDistance = 0.5 * projectionMatrix[5];\n\n  return {\n    width,\n    height,\n    viewState: {\n      altitude: focalDistance,\n      bearing,\n      latitude: center.lat(),\n      longitude: center.lng(),\n      pitch,\n      projectionMatrix,\n      repeat: true,\n      zoom: zoom - 1\n    }\n  };\n}\n\nfunction getMapSize(map) {\n  // The map fills the container div unless it's in fullscreen mode\n  // at which point the first child of the container is promoted\n  const container = map.getDiv().firstChild;\n  return {\n    width: container.offsetWidth,\n    height: container.offsetHeight\n  };\n}\n\nfunction pixelToLngLat(projection, x, y) {\n  const point = new google.maps.Point(x, y);\n  const latLng = projection.fromContainerPixelToLatLng(point);\n  return [latLng.lng(), latLng.lat()];\n}\n\nfunction getEventPixel(event, deck) {\n  if (event.pixel) {\n    return event.pixel;\n  }\n  // event.pixel may not exist when clicking on a POI\n  // https://developers.google.com/maps/documentation/javascript/reference/map#MouseEvent\n  const point = deck.getViewports()[0].project([event.latLng.lng(), event.latLng.lat()]);\n  return {\n    x: point[0],\n    y: point[1]\n  };\n}\n\n// Triggers picking on a mouse event\nfunction handleMouseEvent(deck, type, event) {\n  const mockEvent = {\n    type,\n    offsetCenter: getEventPixel(event, deck),\n    srcEvent: event\n  };\n\n  switch (type) {\n    case 'click':\n      // Hack: because we do not listen to pointer down, perform picking now\n      deck._lastPointerDownInfo = deck.pickObject({\n        ...mockEvent.offsetCenter,\n        radius: deck.props.pickingRadius\n      });\n      mockEvent.tapCount = 1;\n      deck._onEvent(mockEvent);\n      break;\n\n    case 'dblclick':\n      mockEvent.type = 'click';\n      mockEvent.tapCount = 2;\n      deck._onEvent(mockEvent);\n      break;\n\n    case 'mousemove':\n      mockEvent.type = 'pointermove';\n      deck._onPointerMove(mockEvent);\n      break;\n\n    case 'mouseout':\n      mockEvent.type = 'pointerleave';\n      deck._onPointerMove(mockEvent);\n      break;\n\n    default:\n      return;\n  }\n}\n"],"file":"utils.js"}